AWS_ACCOUNT_ID := ${AWS_ACCOUNT_ID}
ECR_IMAGE := ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/org.wellcome/labs
TAG_ROOT := mesh-grants
REVISION := $(shell git rev-parse HEAD)
TAG := $(TAG_ROOT)-$(REVISION)
TAG_LATEST := $(TAG_ROOT)-latest

.PHONY: aws-docker-login
aws-docker-login:
	aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.eu-west-1.amazonaws.com

.PHONY: get-assets
get-assets:
	if [ ! -d "$(PWD)/models/disease_mesh_cnn-2021.03.1/" ]; then \
		aws s3 cp --recursive s3://datalabs-data/grants_tagger/models/disease_mesh_cnn-2021.03.1/ models/disease_mesh_cnn-2021.03.1/ && \
		aws s3 cp s3://datalabs-data/grants_tagger/models/disease_mesh_label_binarizer.pkl models/ && \
		aws s3 cp s3://datalabs-data/grants_tagger/models/tfidf-svm-2020.05.2.pkl models/ && \
		aws s3 cp --recursive s3://datalabs-data/grants_tagger/models/scibert-2020.05.5/ models/scibert-2020.05.5/ && \
		aws s3 cp s3://datalabs-data/grants_tagger/models/label_binarizer.pkl models/ && \
		aws s3 cp --recursive s3://datalabs-data/grants_tagger/models/xlinear models/xlinear; \
	fi


.PHONY: build-image
build-image: get-assets
	docker build \
		-t org.wellcome/labs:$(TAG_LATEST) \
		-t $(ECR_IMAGE):$(TAG) \
		-t $(ECR_IMAGE):$(TAG_LATEST) \
		-f Dockerfile.streamlit \
		-m 8g \
		.

.PHONY: docker-push
docker-push: build-image aws-docker-login
	docker push $(ECR_IMAGE):$(TAG)
